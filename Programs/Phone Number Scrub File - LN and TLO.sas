/*FIRST WE NEED TO MAKE THE GENERAL SCRUB TEMPLATE*/

/*%LET SCRUB_PATH = &MASTER_DIR.\SCRUB EXPORTS\&DATE.;*/

DATA SCRUB_TEMPLATE;
    LENGTH
        ACCOUNTID        $ 50
        ISSUERACCOUNTNUMBER  $ 50
        CLIENTACCOUNTID   $ 50
        SSN               $ 50
        FLEXTAG           $ 50
        EMAIL             $ 50
        NEWADDRESS1       $ 50
        NEWCITY1          $ 50
        NEWSTATE1         $ 50
        NEWZIP1           $ 50
        NEWADDRESS2       $ 50
        NEWCITY2          $ 50
        NEWSTATE2         $ 50
        NEWZIP2           $ 50
        NEWADDRESS3       $ 50
        NEWCITY3          $ 50
        NEWSTATE3         $ 50
        NEWZIP3           $ 50
        NEWADDRESS4       $ 50
        NEWCITY4          $ 50
        NEWSTATE4         $ 50
        NEWZIP4           $ 50
        NEWADDRESS5       $ 50
        NEWCITY5          $ 50
        NEWSTATE5         $ 50
        NEWZIP5           $ 50
        HOMEPHONE1        $ 50
        HOMEPHONE1LINETYPE  $ 50
        HOMEPHONE2        $ 50
        HOMEPHONE2LINETYPE  $ 50
        HOMEPHONE3        $ 50
        HOMEPHONE3LINETYPE  $ 50
        HOMEPHONE4        $ 50
        HOMEPHONE4LINETYPE  $ 50
        HOMEPHONE5        $ 50
        HOMEPHONE5LINETYPE  $ 50
        HOMEPHONE6        $ 50
        HOMEPHONE6LINETYPE  $ 50
        HOMEPHONE7        $ 50
        HOMEPHONE7LINETYPE  $ 50
        HOMEPHONE8        $ 50
        HOMEPHONE8LINETYPE  $ 50
        HOMEPHONE9        $ 50
        HOMEPHONE9LINETYPE  $ 50
        HOMEPHONE10       $ 50
        HOMEPHONE10LINETYPE  $ 50
        WORKPHONE1        $ 50
        WORKPHONE1LINETYPE  $ 50
        WORKPHONE2        $ 50
        WORKPHONE2LINETYPE  $ 50
        WORKPHONE3        $ 50
        WORKPHONE3LINETYPE  $ 50
        WORKPHONE4        $ 50
        WORKPHONE4LINETYPE  $ 50
        WORKPHONE5        $ 50
        WORKPHONE5LINETYPE  $ 50
        RELATIVEPHONE1    $ 50
        RELATIVEPHONE1LINETYPE  $ 50
        RELATIVEPHONE2    $ 50
        RELATIVEPHONE2LINETYPE  $ 50
        RELATIVEPHONE3    $ 50
        RELATIVEPHONE3LINETYPE  $ 50
        RELATIVEPHONE4    $ 50
        RELATIVEPHONE4LINETYPE  $ 50
        RELATIVEPHONE5    $ 50
        RELATIVEPHONE5LINETYPE  $ 50
        REFERENCEPHONE1   $ 50
        REFERENCEPHONE1LINETYPE  $ 50
        REFERENCEPHONE2   $ 50
        REFERENCEPHONE2LINETYPE  $ 50
        REFERENCEPHONE3   $ 50
        REFERENCEPHONE3LINETYPE  $ 50
        REFERENCEPHONE4   $ 50
        REFERENCEPHONE4LINETYPE  $ 50
        REFERENCEPHONE5   $ 50
        REFERENCEPHONE5LINETYPE  $ 50
        EMPLOYER_NAME     $ 50
        EMPLOYER_ADDRESS_1  $ 50
        EMPLOYER_ADDRESS_2  $ 50
        EMPLOYER_CITY     $ 50
        EMPLOYER_STATE    $ 50
        EMPLOYER_ZIP      $ 50
        EMPLOYER_PHONE    $ 50
        DATE_EMPLOYMENT_START  $ 50
        DATE_EMPLOYMENT_END  $ 50 ;
    FORMAT
        ACCOUNTID        $CHAR50.
        ISSUERACCOUNTNUMBER $CHAR50.
        CLIENTACCOUNTID  $CHAR50.
        SSN              $CHAR50.
        FLEXTAG         $CHAR50.
        EMAIL            $CHAR50.
        NEWADDRESS1     $CHAR50.
        NEWCITY1         $CHAR50.
        NEWSTATE1        $CHAR50.
        NEWZIP1          $CHAR50.
        NEWADDRESS2     $CHAR50.
        NEWCITY2         $CHAR50.
        NEWSTATE2        $CHAR50.
        NEWZIP2          $CHAR50.
        NEWADDRESS3      $CHAR50.
        NEWCITY3         $CHAR50.
        NEWSTATE3        $CHAR50.
        NEWZIP3          $CHAR50.
        NEWADDRESS4      $CHAR50.
        NEWCITY4         $CHAR50.
        NEWSTATE4        $CHAR50.
        NEWZIP4          $CHAR50.
        NEWADDRESS5      $CHAR50.
        NEWCITY5         $CHAR50.
        NEWSTATE5        $CHAR50.
        NEWZIP5          $CHAR50.
        HOMEPHONE1       $CHAR50.
        HOMEPHONE1LINETYPE $CHAR50.
        HOMEPHONE2       $CHAR50.
        HOMEPHONE2LINETYPE $CHAR50.
        HOMEPHONE3       $CHAR50.
        HOMEPHONE3LINETYPE $CHAR50.
        HOMEPHONE4       $CHAR50.
        HOMEPHONE4LINETYPE $CHAR50.
        HOMEPHONE5       $CHAR50.
        HOMEPHONE5LINETYPE $CHAR50.
        HOMEPHONE6       $CHAR50.
        HOMEPHONE6LINETYPE $CHAR50.
        HOMEPHONE7       $CHAR50.
        HOMEPHONE7LINETYPE $CHAR50.
        HOMEPHONE8       $CHAR50.
        HOMEPHONE8LINETYPE $CHAR50.
        HOMEPHONE9       $CHAR50.
        HOMEPHONE9LINETYPE $CHAR50.
        HOMEPHONE10      $CHAR50.
        HOMEPHONE10LINETYPE $CHAR50.
        WORKPHONE1       $CHAR50.
        WORKPHONE1LINETYPE $CHAR50.
        WORKPHONE2       $CHAR50.
        WORKPHONE2LINETYPE $CHAR50.
        WORKPHONE3       $CHAR50.
        WORKPHONE3LINETYPE $CHAR50.
        WORKPHONE4       $CHAR50.
        WORKPHONE4LINETYPE $CHAR50.
        WORKPHONE5       $CHAR50.
        WORKPHONE5LINETYPE $CHAR50.
        RELATIVEPHONE1   $CHAR50.
        RELATIVEPHONE1LINETYPE $CHAR50.
        RELATIVEPHONE2   $CHAR50.
        RELATIVEPHONE2LINETYPE $CHAR50.
        RELATIVEPHONE3   $CHAR50.
        RELATIVEPHONE3LINETYPE $CHAR50.
        RELATIVEPHONE4   $CHAR50.
        RELATIVEPHONE4LINETYPE $CHAR50.
        RELATIVEPHONE5   $CHAR50.
        RELATIVEPHONE5LINETYPE $CHAR50.
        REFERENCEPHONE1  $CHAR50.
        REFERENCEPHONE1LINETYPE $CHAR50.
        REFERENCEPHONE2  $CHAR50.
        REFERENCEPHONE2LINETYPE $CHAR50.
        REFERENCEPHONE3  $CHAR50.
        REFERENCEPHONE3LINETYPE $CHAR50.
        REFERENCEPHONE4  $CHAR50.
        REFERENCEPHONE4LINETYPE $CHAR50.
        REFERENCEPHONE5  $CHAR50.
        REFERENCEPHONE5LINETYPE $CHAR50.
        EMPLOYER_NAME    $CHAR50.
        EMPLOYER_ADDRESS_1 $CHAR50.
        EMPLOYER_ADDRESS_2 $CHAR50.
        EMPLOYER_CITY    $CHAR50.
        EMPLOYER_STATE   $CHAR50.
        EMPLOYER_ZIP     $CHAR50.
        EMPLOYER_PHONE   $CHAR50.
        DATE_EMPLOYMENT_START $CHAR50.
        DATE_EMPLOYMENT_END $CHAR50. ;
	IF _N_ <1;
RUN;


/*WE NEED TO LOAD LN WATERFALL DATA AND GET PHONE INFORMATION*/

PROC SQL;
   CREATE TABLE LN_ADDRESS_PHONE_SCRUB AS 
   SELECT T1.ACCOUNT_NUMBER, 
          T1.ADDRESS_1, 
          T1.P_CITY_NAME_1, 
          T1.ST_1, 
          T1.ZIP_1, 
          T1.ADDR_DT_FIRST_SEEN_1, 
          T1.ADDR_DT_LAST_SEEN_1, 
          T1.SUBJ_PHONE_MATCH_FLAG_1, 
          T1.SUBJ_PHONE_1,
/*			SUBJ_PHONE_POSSIBLE_RELATIONSHIP AS TEST,*/
          (CASE WHEN UPCASE(T1.SUBJ_PHONE_POSSIBLE_RELATIONSHIP) ^= 'SUBJECT' AND SUBJ_PHONE_POSSIBLE_RELATIONSHIP IS NOT NULL AND UPCASE(T1.SUBJ_PHONE_POSSIBLE_RELATIONSHIP) NOT LIKE '%ASSOCIATE%'  THEN 'RELATIVE'
				WHEN UPCASE(T1.SUBJ_PHONE_POSSIBLE_RELATIONSHIP) = 'SUBJECT' THEN 'SUBJECT' 
				WHEN UPCASE(SUBJ_PHONE_POSSIBLE_RELATIONSHIP) LIKE '%ASSOCIATE%' THEN 'REFERENCE'	ELSE ''													
																														END)	AS SUBJ_PHONE_POSSIBLE_RELATIONSHIP , 
          T1.SUBJ_PHONE_LINE_TYPE_1, 
          T1.SUBJ_PHONE_MATCH_FLAG_2, 
          T1.SUBJ_PHONE_2, 
/*		  SUBJ_PHONE_POSSIBLE_RELATIO_0001 AS TEST2,*/
          (CASE WHEN UPCASE(T1.SUBJ_PHONE_POSSIBLE_RELATIO_0001) ^= 'SUBJECT' AND SUBJ_PHONE_POSSIBLE_RELATIO_0001 IS NOT NULL AND UPCASE(T1.SUBJ_PHONE_POSSIBLE_RELATIO_0001) NOT LIKE '%ASSOCIATE%' THEN 'RELATIVE'  
				WHEN UPCASE(T1.SUBJ_PHONE_POSSIBLE_RELATIO_0001) = 'SUBJECT' THEN 'SUBJECT' 
				WHEN UPCASE(SUBJ_PHONE_POSSIBLE_RELATIO_0001) LIKE '%ASSOCIATE%' THEN 'REFERENCE'	ELSE ''															
																														END)	AS SUBJ_PHONE_POSSIBLE_RELATIO_0001, 
          T1.SUBJ_PHONE_LINE_TYPE_2, 
          T1.SUBJ_PHONE_MATCH_FLAG_3, 
          T1.SUBJ_PHONE_3, 
          (CASE WHEN UPCASE(T1.SUBJ_PHONE_POSSIBLE_RELATIO_0002) ^= 'SUBJECT' AND SUBJ_PHONE_POSSIBLE_RELATIO_0002 IS NOT NULL AND UPCASE(T1.SUBJ_PHONE_POSSIBLE_RELATIO_0002) NOT LIKE '%ASSOCIATE%'  THEN 'RELATIVE' 
				WHEN UPCASE(SUBJ_PHONE_POSSIBLE_RELATIO_0002) = 'SUBJECT' THEN 'SUBJECT' 	
				WHEN UPCASE(SUBJ_PHONE_POSSIBLE_RELATIO_0002) LIKE '%ASSOCIATE%' THEN 'REFERENCE' ELSE ''															
																														END)	AS SUBJ_PHONE_POSSIBLE_RELATIO_0002, 
          T1.SUBJ_PHONE_LINE_TYPE_3
      FROM LN_OUTPUT_LNWATERFALL_INPUT_EBG T1;
QUIT;

/*LN PHONE NUMBER SCRUB */
DATA HOME_NUMBERS1 	(KEEP=ACCOUNT_NUMBER SUBJ_PHONE_POSSIBLE_RELATIONSHIP SUBJ_PHONE_LINE_TYPE_1 SUBJ_PHONE_1)
	 HOME_NUMBERS2  (KEEP=ACCOUNT_NUMBER SUBJ_PHONE_POSSIBLE_RELATIO_0001 SUBJ_PHONE_LINE_TYPE_2 SUBJ_PHONE_2)
	 HOME_NUMBERS3  (KEEP=ACCOUNT_NUMBER SUBJ_PHONE_POSSIBLE_RELATIO_0002 SUBJ_PHONE_LINE_TYPE_3 SUBJ_PHONE_3)
	 REFERENCE1     (KEEP=ACCOUNT_NUMBER SUBJ_PHONE_POSSIBLE_RELATIONSHIP SUBJ_PHONE_LINE_TYPE_1 SUBJ_PHONE_1)
	 REFERENCE2     (KEEP=ACCOUNT_NUMBER SUBJ_PHONE_POSSIBLE_RELATIO_0001 SUBJ_PHONE_LINE_TYPE_2 SUBJ_PHONE_2)
	 REFERENCE3  	(KEEP=ACCOUNT_NUMBER SUBJ_PHONE_POSSIBLE_RELATIO_0002 SUBJ_PHONE_LINE_TYPE_3 SUBJ_PHONE_3)
	 RELATIVE_NUMBERS1 (KEEP=ACCOUNT_NUMBER SUBJ_PHONE_POSSIBLE_RELATIONSHIP SUBJ_PHONE_LINE_TYPE_1 SUBJ_PHONE_1)
	 RELATIVE_NUMBERS2 (KEEP=ACCOUNT_NUMBER SUBJ_PHONE_POSSIBLE_RELATIO_0001 SUBJ_PHONE_LINE_TYPE_2 SUBJ_PHONE_2)
	 RELATIVE_NUMBERS3 (KEEP=ACCOUNT_NUMBER SUBJ_PHONE_POSSIBLE_RELATIO_0002 SUBJ_PHONE_LINE_TYPE_3 SUBJ_PHONE_3);
	SET LN_ADDRESS_PHONE_SCRUB;
/*	HOME NUMBERS*/
	IF SUBJ_PHONE_POSSIBLE_RELATIONSHIP = 'SUBJECT' THEN 
		DO;
			OUTPUT HOME_NUMBERS1;
		END;
	IF SUBJ_PHONE_POSSIBLE_RELATIO_0001 = 'SUBJECT' THEN 
		DO;
/*			KEEP=ACCOUNT_NUMBER SUBJ_PHONE_POSSIBLE_RELATIONSHIP SUBJ_PHONE_LINE_TYPE_2 SUBJ_PHONE_2;*/
			OUTPUT HOME_NUMBERS2;
		END;
	IF SUBJ_PHONE_POSSIBLE_RELATIO_0002 = 'SUBJECT' THEN 
		DO;
/*			KEEP=ACCOUNT_NUMBER SUBJ_PHONE_POSSIBLE_RELATIONSHIP SUBJ_PHONE_LINE_TYPE_3 SUBJ_PHONE_3;*/
			OUTPUT HOME_NUMBERS3;
		END;
/*	REFERENCE NUMBERS*/
	IF SUBJ_PHONE_POSSIBLE_RELATIONSHIP = 'REFERENCE' THEN 
		DO;
/*			KEEP=ACCOUNT_NUMBER SUBJ_PHONE_POSSIBLE_RELATIONSHIP SUBJ_PHONE_LINE_TYPE_1 SUBJ_PHONE_1;*/
			OUTPUT REFERENCE1;
		END;
	IF SUBJ_PHONE_POSSIBLE_RELATIO_0001 = 'REFERENCE' THEN 
		DO;
/*			KEEP=ACCOUNT_NUMBER SUBJ_PHONE_POSSIBLE_RELATIONSHIP SUBJ_PHONE_LINE_TYPE_2 SUBJ_PHONE_2;*/
			OUTPUT REFERENCE2;
		END;
	IF SUBJ_PHONE_POSSIBLE_RELATIO_0002 = 'REFERENCE' THEN 
		DO;
/*			KEEP=ACCOUNT_NUMBER SUBJ_PHONE_POSSIBLE_RELATIONSHIP SUBJ_PHONE_LINE_TYPE_3 SUBJ_PHONE_3;*/
			OUTPUT REFERENCE3;
		END;
/*	RELATIVE NUMBERS*/
	IF SUBJ_PHONE_POSSIBLE_RELATIONSHIP = 'RELATIVE' THEN 
		DO;
/*			KEEP=ACCOUNT_NUMBER SUBJ_PHONE_POSSIBLE_RELATIONSHIP SUBJ_PHONE_LINE_TYPE_1 SUBJ_PHONE_1;*/
			OUTPUT RELATIVE_NUMBERS1;
		END;
	IF SUBJ_PHONE_POSSIBLE_RELATIO_0001 = 'RELATIVE' THEN 
		DO;
/*			KEEP=ACCOUNT_NUMBER SUBJ_PHONE_POSSIBLE_RELATIONSHIP SUBJ_PHONE_LINE_TYPE_2 SUBJ_PHONE_2;*/
			OUTPUT RELATIVE_NUMBERS2;
		END;
	IF SUBJ_PHONE_POSSIBLE_RELATIO_0002 = 'RELATIVE' THEN 
		DO;
/*			KEEP=ACCOUNT_NUMBER SUBJ_PHONE_POSSIBLE_RELATIONSHIP SUBJ_PHONE_LINE_TYPE_3 SUBJ_PHONE_3;*/
			OUTPUT RELATIVE_NUMBERS3;
		END;
RUN;

/*COMBINE HOME_NUMBERS*/

PROC SQL;
	CREATE TABLE LN_HOME_NUMBERS AS
	SELECT *
	FROM HOME_NUMBERS1
	UNION ALL CORR
	SELECT ACCOUNT_NUMBER
		  ,SUBJ_PHONE_POSSIBLE_RELATIO_0001 AS SUBJ_PHONE_POSSIBLE_RELATIONSHIP
		  ,SUBJ_PHONE_2						AS SUBJ_PHONE_1
	FROM HOME_NUMBERS2
	UNION ALL CORR
	SELECT ACCOUNT_NUMBER
		  ,SUBJ_PHONE_POSSIBLE_RELATIO_0002 AS SUBJ_PHONE_POSSIBLE_RELATIONSHIP
		  ,SUBJ_PHONE_3						AS SUBJ_PHONE_1
	FROM HOME_NUMBERS3
;
QUIT;

PROC SORT DATA=LN_HOME_NUMBERS OUT=LN_HOME_NUMBERS_SRT NODUP;
BY ACCOUNT_NUMBER SUBJ_PHONE_1;
RUN;

/*COMBINE RELATIVE_NUMBERS*/
PROC SQL;
	CREATE TABLE LN_RELATIVE_NUMBERS AS
	SELECT *
	FROM RELATIVE_NUMBERS1
	UNION ALL CORR
	SELECT ACCOUNT_NUMBER
		  ,SUBJ_PHONE_POSSIBLE_RELATIO_0001 AS SUBJ_PHONE_POSSIBLE_RELATIONSHIP
		  ,SUBJ_PHONE_2						AS SUBJ_PHONE_1
	FROM RELATIVE_NUMBERS2
	UNION ALL CORR
	SELECT ACCOUNT_NUMBER
		  ,SUBJ_PHONE_POSSIBLE_RELATIO_0002 AS SUBJ_PHONE_POSSIBLE_RELATIONSHIP
		  ,SUBJ_PHONE_3						AS SUBJ_PHONE_1
	FROM RELATIVE_NUMBERS3
;
QUIT;

PROC SORT DATA=LN_RELATIVE_NUMBERS OUT=LN_RELATIVE_NUMBERS_SRT NODUP;
BY ACCOUNT_NUMBER SUBJ_PHONE_1;
RUN;

/*COMBINE REFERENCE_NUMBERS*/
PROC SQL;
	CREATE TABLE LN_REFERENCE_NUMBERS AS
	SELECT *
	FROM REFERENCE1
	UNION ALL CORR
	SELECT ACCOUNT_NUMBER
		  ,SUBJ_PHONE_POSSIBLE_RELATIO_0001 AS SUBJ_PHONE_POSSIBLE_RELATIONSHIP
		  ,SUBJ_PHONE_2						AS SUBJ_PHONE_1
	FROM REFERENCE2
	UNION ALL CORR
	SELECT ACCOUNT_NUMBER
		  ,SUBJ_PHONE_POSSIBLE_RELATIO_0002 AS SUBJ_PHONE_POSSIBLE_RELATIONSHIP
		  ,SUBJ_PHONE_3						AS SUBJ_PHONE_1
	FROM REFERENCE3
;
QUIT;

PROC SORT DATA=LN_REFERENCE_NUMBERS OUT=LN_REFERENCE_NUMBERS_SRT NODUP;
BY ACCOUNT_NUMBER SUBJ_PHONE_1;
RUN;

PROC SQL;
	CREATE TABLE LN_PHONE_SCRUB_INSERT AS
	SELECT A.ACCOUNTID
		  ,B.SUBJ_PHONE_1				AS HOMEPHONE1
		  ,C.SUBJ_PHONE_2				AS HOMEPHONE2
		  ,D.SUBJ_PHONE_3				AS HOMEPHONE3
		  ,E.SUBJ_PHONE_1				AS RELATIVEPHONE1
		  ,F.SUBJ_PHONE_2				AS RELATIVEPHONE2
		  ,G.SUBJ_PHONE_3				AS RELATIVEPHONE3
		  ,H.SUBJ_PHONE_1				AS REFERENCEPHONE1
		  ,I.SUBJ_PHONE_2				AS REFERENCEPHONE2
		  ,J.SUBJ_PHONE_3				AS REFERENCEPHONE3
	FROM BEAM_ACCT_EXTRACT_FORMAT A
	LEFT JOIN HOME_NUMBERS1 B
		ON (COMPRESS(A.ISSUERACCOUNTNUMBER) = COMPRESS(B.ACCOUNT_NUMBER))
	LEFT JOIN HOME_NUMBERS2 C
		ON (COMPRESS(A.ISSUERACCOUNTNUMBER) = COMPRESS(C.ACCOUNT_NUMBER))
	LEFT JOIN HOME_NUMBERS3 D
		ON (COMPRESS(A.ISSUERACCOUNTNUMBER) = COMPRESS(D.ACCOUNT_NUMBER))
	LEFT JOIN RELATIVE_NUMBERS1 E
		ON (COMPRESS(A.ISSUERACCOUNTNUMBER) = COMPRESS(D.ACCOUNT_NUMBER))
	LEFT JOIN RELATIVE_NUMBERS2 F
		ON (COMPRESS(A.ISSUERACCOUNTNUMBER) = COMPRESS(F.ACCOUNT_NUMBER))
	LEFT JOIN RELATIVE_NUMBERS3 G
		ON (COMPRESS(A.ISSUERACCOUNTNUMBER) = COMPRESS(G.ACCOUNT_NUMBER))
	LEFT JOIN REFERENCE1 H
		ON (COMPRESS(A.ISSUERACCOUNTNUMBER) = COMPRESS(H.ACCOUNT_NUMBER))
	LEFT JOIN REFERENCE2 I
		ON (COMPRESS(A.ISSUERACCOUNTNUMBER) = COMPRESS(I.ACCOUNT_NUMBER))
	LEFT JOIN REFERENCE3 J
		ON (COMPRESS(A.ISSUERACCOUNTNUMBER) = COMPRESS(J.ACCOUNT_NUMBER))
	WHERE B.SUBJ_PHONE_1 IS NOT NULL
		OR C.SUBJ_PHONE_2 IS NOT NULL
		OR D.SUBJ_PHONE_3 IS NOT NULL
		OR E.SUBJ_PHONE_1 IS NOT NULL
		OR F.SUBJ_PHONE_2 IS NOT NULL
		OR G.SUBJ_PHONE_3 IS NOT NULL
		OR H.SUBJ_PHONE_1 IS NOT NULL
		OR I.SUBJ_PHONE_2 IS NOT NULL
		OR J.SUBJ_PHONE_3 IS NOT NULL
;
QUIT;

DATA LN_PHONE_SCRUB_BASE;
	SET SCRUB_TEMPLATE;
RUN;

PROC APPEND BASE=LN_PHONE_SCRUB_BASE DATA=LN_PHONE_SCRUB_INSERT FORCE;
RUN;

/*EXPORT LN_PHONE_SCRUB*/

PROC EXPORT DATA=LN_PHONE_SCRUB_BASE
	OUTFILE="&SCRUB_PATH\LN_PHONE_SCRUB.XLSX"
	DBMS=XLSX
	REPLACE;
RUN;


/*NOW GET TILO*/
DATA TLO_ADDRESS_PHONE_SCRUB;
	SET TLO_WATERFALL_INPUT_EBG;
	KEEP	CUSTOMER_ACCOUNT
			TLOADDRESS1LINE1
			TLOADDRESS1LINE2
			TLOADDRESS1LINE3
			TLOADDRESS1STATE
			TLOADDRESS1ZIP
			TLOADDRESS1DATEFIRSTSEEN
			TLOADDRESS1DATELASTSEEN
			TLOADDRESS2LINE1
			TLOADDRESS2LINE2
			TLOADDRESS2LINE3
			TLOADDRESS2CITY
			TLOADDRESS2COUNTY
			TLOADDRESS2STATE
			TLOADDRESS2ZIP
			TLOADDRESS2DATEFIRSTSEEN
			TLOADDRESS2DATELASTSEEN
			TLOPHONE1
			TLOPHONE2
			TLOPHONE3
			TLOPHONE1PHONETYPE
			TLOPHONE1SCORE
			TLOPHONE2PHONETYPE
			TLOPHONE2SCORE
			TLOPHONE3PHONETYPE
			TLOPHONE3SCORE;
RUN;

DATA HOME_NUMBERS1 (KEEP=CUSTOMER_ACCOUNT TLOPHONE1)
	 HOME_NUMBERS2 (KEEP=CUSTOMER_ACCOUNT TLOPHONE2)
	 HOME_NUMBERS3 (KEEP=CUSTOMER_ACCOUNT TLOPHONE3);
	SET TLO_ADDRESS_PHONE_SCRUB;
	IF TLOPHONE1 ^= '' THEN
		DO;
			OUTPUT HOME_NUMBERS1;
		END;
	IF TLOPHONE2 ^= '' THEN
		DO;
			OUTPUT HOME_NUMBERS2;
		END;
	IF TLOPHONE3 ^= '' THEN
		DO;
			OUTPUT HOME_NUMBERS3;
		END;
RUN;

PROC SORT DATA=HOME_NUMBERS1 OUT=HOME_NUMBERS1_SRT NODUP;
BY CUSTOMER_ACCOUNT TLOPHONE1;
RUN;
PROC SORT DATA=HOME_NUMBERS2 OUT=HOME_NUMBERS2_SRT NODUP;
BY CUSTOMER_ACCOUNT TLOPHONE2;
RUN;
PROC SORT DATA=HOME_NUMBERS3 OUT=HOME_NUMBERS3_SRT NODUP;
BY CUSTOMER_ACCOUNT TLOPHONE3;
RUN;

/*MAKE TLO_PHONE SCRUB*/

PROC SQL;
	CREATE TABLE TLO_PHONE_SCRUB_INSERT AS
	SELECT A.ACCOUNTID
		  ,B.TLOPHONE1			AS HOMEPHONE1
		  ,C.TLOPHONE2			AS HOMEPHONE2
		  ,D.TLOPHONE3			AS HOMEPHONE3
	FROM BEAM_ACCT_EXTRACT_FORMAT A
	LEFT JOIN HOME_NUMBERS1 B
		ON (COMPRESS(A.ISSUERACCOUNTNUMBER) = COMPRESS(B.CUSTOMER_ACCOUNT))
	LEFT JOIN HOME_NUMBERS2 C
		ON (COMPRESS(A.ISSUERACCOUNTNUMBER) = COMPRESS(C.CUSTOMER_ACCOUNT))
	LEFT JOIN HOME_NUMBERS3 D
		ON (COMPRESS(A.ISSUERACCOUNTNUMBER) = COMPRESS(D.CUSTOMER_ACCOUNT))
	WHERE B.TLOPHONE1 IS NOT NULL OR C.TLOPHONE2 IS NOT NULL OR D.TLOPHONE3 IS NOT NULL
;
QUIT;

DATA TLO_PHONE_SCRUB_BASE;
	SET SCRUB_TEMPLATE;
RUN;

PROC APPEND BASE=TLO_PHONE_SCRUB_BASE DATA=TLO_PHONE_SCRUB_INSERT FORCE;
RUN;

/*EXPORT TLO_PHONE_SCRUB*/

PROC EXPORT DATA=TLO_PHONE_SCRUB_BASE
	OUTFILE="&SCRUB_PATH\TLO_PHONE_SCRUB.XLSX"
	DBMS=XLSX
	REPLACE;
RUN;

